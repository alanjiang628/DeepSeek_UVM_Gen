class sc_coverage extends uvm_subscriber #(sc_transaction);
    `uvm_component_utils(sc_coverage)

    // 指向配置对象
    sc_config cfg;
	
    // 功能覆盖率模型
    covergroup glitch_cg with function sample(sc_transaction tr);
        option.per_instance = 1;

        // 输入信号跳变
        noisy_trans: coverpoint tr.noisy_in {
            bins rise = (0 => 1);
            bins fall = (1 => 0);
        }

        // 消抖周期统计
        debounce_cp: coverpoint tr.duration_cycles {
            bins short = {[1:100]};
            bins med = {[101:1000]};
            bins long = default;
        }

        // 异常类型交叉
        glitch_type: coverpoint tr.glitch_type {
            bins reset = {RESET_GLITCH};
            bins clock = {CLOCK_GLITCH};
            bins power = {POWER_DROP};
        }

        // 关键交叉覆盖
        reset_glitch_x_duration: cross glitch_type, debounce_cp {
            ignore_bins non_reset = !binsof(glitch_type.reset);
        }

    endgroup

    function new(string name, uvm_component parent);
        super.new(name, parent);
        glitch_cg = new();
        if(!uvm_config_db#(sc_config)::get(this, "", "config", cfg))
            `uvm_fatal("CFG", "Config not found")
    endfunction

    function void write(sc_transaction t);
        if(cfg.enable_coverage) begin
            glitch_cg.sample(t);
            `uvm_info("COV", $sformatf("Coverage: %.2f%%", glitch_cg.get_inst_coverage()), UVM_MEDIUM)
        end
    endfunction

    function void report_phase(uvm_phase phase);
        `uvm_info("COV", $sformatf("Final coverage: %.2f%%",
                 glitch_cg.get_inst_coverage()), UVM_LOW)
    endfunction
	
endclass

`endif	

		